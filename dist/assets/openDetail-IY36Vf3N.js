function g(t,e){t.classList.add("expanding"),window.p5Instance&&window.p5Instance.noLoop();const n=t.getBoundingClientRect(),o=n.top+window.scrollY,s=n.left+window.scrollX,i=n.width,r=n.height;t.parentElement,t.nextSibling,t.style.transition="none",t.style.position="fixed",t.style.top=`${o}px`,t.style.left=`${s}px`,t.style.width=`${i}px`,t.style.height=`${r}px`,t.style.margin="0",t.style.transform="none",t.style.zIndex="10000",t.style.willChange="top,left,width,height,transform",document.body.appendChild(t),t.getBoundingClientRect();const a=600;t.style.transition=`top ${a}ms ease, left ${a}ms ease, width ${a}ms ease, height ${a}ms ease, transform ${a}ms ease`,t.style.top="0px",t.style.left="0px",t.style.width="100vw",t.style.height="100vh",t.classList.add("fullscreen");const d=u=>{u.target===t&&t.classList.contains("fullscreen")&&(t.removeEventListener("transitionend",d),t.style.willChange="",p(e))};t.addEventListener("transitionend",d),setTimeout(()=>{document.body.contains(t)&&p(e)},a+50)}function p(t){document.body.innerHTML=`
    <div id="detail-app" style="min-height:100vh; display:flex; flex-direction:column; padding:24px; box-sizing:border-box;">
      <button id="close-detail" aria-label="Close" style="align-self:flex-end; font-size:1.25rem; background:none; border:none; cursor:pointer;">âœ•</button>
      <main style="max-width:960px; width:100%; margin:0 auto;">
        <h1 style="margin:0 0 12px 0;">${t.title}</h1>
        <p style="margin:0 0 8px 0;"><strong>Material:</strong> ${t.material??""}</p>
        <p style="margin:0 0 16px 0;">${t.description??""}</p>
        ${t.image?`<img src="${t.image}" alt="${t.title}" style="max-width:100%; height:auto; display:block;">`:""}
      </main>
    </div>
  `,document.getElementById("close-detail").addEventListener("click",()=>{location.reload()})}let c=[];function l(t){const e=document.querySelector("#carousel");e&&(e.innerHTML="",t.forEach(n=>{const o=document.createElement("div");o.classList.add("slide");const s=document.createElement("div");if(s.classList.add("slide-inner"),n.image){const a=document.createElement("img");a.src=n.image,a.alt=n.title||"",s.appendChild(a)}const i=document.createElement("p");i.textContent=n.title||"",s.appendChild(i);const r=document.createElement("span");r.classList.add("tooltip"),r.title="[tap]",o.appendChild(s),o.appendChild(r),e.appendChild(o),o.addEventListener("click",()=>{g(o,n)})}))}document.addEventListener("DOMContentLoaded",()=>{fetch("/data/stone.json").then(e=>e.json()).then(e=>{c=e,l(c)}).catch(e=>console.error("Error loading stone data:",e)),document.querySelectorAll('#category-buttons button:not([data-category="filter"])').forEach(e=>{e.addEventListener("click",()=>{const n=e.dataset.category;if(n==="all")l(c);else{const o=c.filter(s=>s.category===n);l(o)}})})});document.addEventListener("DOMContentLoaded",()=>{const t=document.querySelector('#category-buttons button[data-category="filter"]'),e=document.querySelector("#category-buttons");!t||!e||t.addEventListener("click",()=>{e.classList.toggle("show-buttons")})});export{g as openDetail};
